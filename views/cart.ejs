<!-- Remove from Cart
qty change -->
<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart - Coffee Shop</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-brown">
        <div class="container-fluid">
            <a class="navbar-brand" href="/index">Coffee Shop</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    
                    <form class="d-flex mx-auto">
                        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                        <button class="btn btn-outline-light" type="submit">Search</button>
                    </form>
                </ul>
                
                
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/login"><i class="bi bi-box-arrow-in-right"></i> Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/register"><i class="bi bi-person-plus"></i> Register</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/cart"><i class="bi bi-cart"></i> Cart</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>


    <div class="container cart-container my-5">
        <h2 class="text-center mb-4">Your Cart</h2>
        <div class="container">
            <h1>Active User Carts</h1>
            <div class="cart-items" id="cartItems">
                <!-- Active user carts will be displayed here -->
            </div>
        </div>

        <form action="/cart/checkout" method="post" class="user-info-form">
            <h3 class="mb-3">Shipping Information</h3>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email" name="email" readonly value="user_email@example.com">
                </div>
                <div class="col-md-6 mb-3">
                    <label for="wallet-balance" class="form-label">Wallet Balance</label>
                    <input type="text" class="form-control" id="wallet-balance" name="wallet-balance" readonly value="$100.00">
                </div>
                <div class="col-md-6 mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input type="text" class="form-control" id="name" name="name" value="John Doe">
                </div>
                <div class="col-md-6 mb-3">
                    <label for="address" class="form-label">Address</label>
                    <input type="text" class="form-control" id="address" name="address" value="123 Main St">
                </div>
                <div class="col-md-6 mb-3">
                    <label for="phone" class="form-label">Phone Number</label>
                    <input type="tel" class="form-control" id="phone" name="phone" value="555-1234">
                </div>
            </div>

            <div class="cart-total mb-3">
                <h4>Total: $XXX.XX</h4>
            </div>

            <button type="submit" class="btn btn-primary">Checkout</button>
        </form>
    </div>

    <footer class="bg-brown text-white text-center py-3">
        <p>&copy; 2023 [name]. All Rights Reserved.</p>
        <div class="social-icons">
            <a href="your_facebook_link" class="bi bi-facebook"></a>
            <a href="your_twitter_link" class="bi bi-twitter"></a>
            <a href="your_instagram_link" class="bi bi-instagram"></a>
            <!-- Add other social media links as needed -->
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const userId = 1; // Replace with the actual user ID
            try {
                const response = await fetch(`/api/carts/active/${userId}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok for fetching carts');
                }
                const carts = await response.json();
                console.log('Carts:', carts);

                const cartItemsContainer = document.getElementById('cartItems');
                carts.forEach(cart => {
                    const cartDiv = document.createElement('div');
                    cartDiv.className = 'row mb-3';
                    cartDiv.innerHTML = `
                        <div class="col-md-2">
                            <img src="${cart.product_image}" alt="Product Image" class="img-fluid">
                        </div>
                        <div class="col-md-4">
                            <h5>Product ID: ${cart.product_id}</h5>
                            <p>Quantity: ${cart.quantity}</p>
                            <!-- <p class="cart-id-store" hidden>${cart.cart_id}</p> -->
                            <button class="btn btn-success incrementBtn" data-cart-id="${cart.cart_id}">Increment</button>
                            <button class="btn btn-danger deleteBtn" data-cart-id="${cart.cart_id}">Delete</button>
                        </div>
                    `;
                    cartItemsContainer.appendChild(cartDiv);
                });

                // Event listeners for increment and delete buttons
                document.querySelectorAll('.incrementBtn').forEach(button => {
                    console.log('Incrementing the quantity');
                    button.addEventListener('click', async () => {
                        const cartId = event.currentTarget.getAttribute('data-cart-id');
                        //console.log('fetchign cart-id to increment the quantity', cartId);
                        await handleIncrement(userId, cartId);
                        const quantityParagraph = button.parentNode.querySelector('p');
                        const currentQuantity = parseInt(quantityParagraph.textContent.split(': ')[1], 10);
                        const updatedQuantity = currentQuantity + 1;
                        quantityParagraph.textContent = `Quantity: ${updatedQuantity}`;
                    });
                });

                document.querySelectorAll('.deleteBtn').forEach(button => {
                    button.addEventListener('click', async () => {
                        const cartId = button.getAttribute('data-cart-id');
                        await handleDelete(cartId);
                    });
                });
            } catch (error) {
                console.error('Error fetching or processing carts:', error);
            }
        });

        async function handleIncrement(userId, cartId) {
            try {
                console.log('API call to increment the quantity', userId, cartId);
        
                const requestData = {
                    userId: userId,
                    cart_id: cartId // Assuming this is the cart_id to be passed in req.body
                };
        
                const response = await fetch(`/api/carts/${cartId}`, {
                    method: 'POST', // Change the method to GET or appropriate method for your server
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                });
        
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                // Update cart quantity
                console.log(`Incremented quantity for cart ID ${cartId}`);
            } catch (error) {
                console.error('Error incrementing quantity:', error);
            }
        }

        async function handleDelete(cartId) {
            try {
                const response = await fetch(`/api/carts/${cartId}`, {
                    method: 'DELETE'
                });
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                // Remove cart item from display
                console.log(`Deleted cart with ID ${cartId}`);
            } catch (error) {
                console.error('Error deleting cart:', error);
            }
        }
    </script>
</body>

</html>
