<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Coffee Shop</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
    <!-- Custom CSS -->
    <link rel="stylesheet" href="styles.css" />
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-brown">
        <div class="container-fluid">
            <a class="navbar-brand" href="/index"><i class="bi bi-cup-hot-fill"></i> CaffeineCache</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                   
                   
                </ul>

                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/login"><i class="bi bi-box-arrow-in-right"></i> Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/register"><i class="bi bi-person-plus"></i> Register</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/cart"><i class="bi bi-cart"></i> Cart</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
 
    <header class="header">
    <div class="search-container">
        <form action="/products" method="GET">
            <input type="text" placeholder="Search by name" name="search" id="searchInput">
            <select name="category" id="categorySelect">
                <option value="">All Categories</option>
                <option value="Beans">Beans</option>
                <option value="Equipment">Equipment</option>
                <option value="Accessories">Accessories</option>
               
            </select>
            <button type="submit">Search</button>
        </form>
    </div>
</header>
 
   
 
 
 
    <div class="container" id="productsContainer">
        <!-- Product tiles will be dynamically added here -->
    </div>
 
    <footer class="bg-brown text-white text-center py-3">
        <p>&copy; 2023 CaffeineCache. All Rights Reserved.</p>
        <div class="social-icons">
            <a href="your_facebook_link" class="bi bi-facebook"></a>
            <a href="your_twitter_link" class="bi bi-twitter"></a>
            <a href="your_instagram_link" class="bi bi-instagram"></a>
            <!-- Add other social media links as needed -->
        </div>
    </footer>
 
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            fetch('api/products/allproducts') // Replace with your API endpoint
                .then(response => {
                    console.log('RESPONSE:', response);
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(products => {
                    console.log('Products:', products);
                    const productsContainer = document.getElementById('productsContainer');
                    products.forEach(product => {
                        const cardDiv = document.createElement('div');
                        cardDiv.className = 'col-md-4 mb-4';
                        cardDiv.innerHTML = `
                            <div class="card">
                                <img src="${product.image_path}" class="card-img-top" alt="${product.product_name}" width="50px" height="50px">
                                <div class="card-body">
                                    <h5 class="card-title">${product.product_name}</h5>
                                    <p class="card-text-id" hidden>${product.product_id}</p>
                                    <p class="card-text">$${product.price}</p>
                                    <button class="btn btn-primary addToCartBtn" data-product-id="${product.id}">Add to Cart</button>
                                </div>
                            </div>
                        `;
                        productsContainer.appendChild(cardDiv);
                    });
   
                    // Event listener for Add to Cart buttons
                    document.querySelectorAll('.addToCartBtn').forEach(button => {
                        console.log('Entering click');
                        button.addEventListener('click', () => {
                            const productId = button.parentNode.querySelector('.card-text-id').textContent;
                            const productName = button.parentNode.querySelector('.card-title').textContent;
                            const productPrice = button.parentNode.querySelector('.card-text').textContent;
                            console.log('product deets:', productId, productName, productPrice);
                            addToCart(productId, productName, productPrice);
                        });
                    });
                })
                .catch(error => {
                    console.error('Error fetching products:', error);
                });
   
            function addToCart(productId, productName, productPrice) {
                console.log('Adding product:', productId, productName, productPrice);
                // Logic to add the product to the cart
                const userId = 1; // TODO: Replace with the actual user ID
                const requestData = {
                    customer_id: userId,
                    quantity: 1, // Assuming quantity is 1
                    is_active: 1,
                    product_id: productId,
                    // Add other parameters if needed
                };

                // Perform a fetch call to the API endpoint
                fetch('/api/carts/addtocart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(requestData),
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Product added to cart:', productName, productPrice);
                        // Handle the success response here
                    })
                    .catch(error => {
                        console.error('Error adding product to cart:', error);
                        // Handle the error here
                    });
            }


            /*document.getElementById('searchForm').addEventListener('submit', function(e) {
            e.preventDefault();
            var searchQuery = document.getElementById('searchInput').value;
            var typeQuery = document.getElementById("typeSelect").value;
            console.log("Search query:", searchQuery);
            console.log("Type query:", typeQuery);
            if(searchQuery && typeQuery){
              fetch("/search/product/"+${encodeURIComponent(searchQuery)}+"/category/"+${encodeURIComponent(typeQuery)})
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .then(products => {
                console.log("Products:", products);
                const resultsContainer = document.getElementById('productsContainer');
                resultsContainer.innerHTML = ''; // Clear previous results
                
                products.forEach(product => {
                  const productDiv = document.createElement('div');
                  productDiv.className = "col-md-4 mb-4";
                  productDiv.innerHTML = `
                                    <div class="card">
                                        <img src="${product.image_path}" class="card-img-top" alt="${product.product_name} width="50px" height="50px">
                                        <div class="card-body">
                                            <h5 class="card-title">${product.product_name}</h5>
                                            <p class="card-text">$${product.price}</p>
                                        </div>
                                    </div>
                                `;
                  resultsContainer.appendChild(productDiv);
                });
              })
              .catch(error => {
                console.error('Error fetching products:', error);
              });
            }else if (searchQuery){
              fetch(`/api/products/search/product/${encodeURIComponent(searchQuery)}`)
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .then(products => {
                console.log("Products:", products);
                const resultsContainer = document.getElementById('productsContainer');
                resultsContainer.innerHTML = ''; // Clear previous results
                
                products.forEach(product => {
                  const productDiv = document.createElement('div');
                  productDiv.className = "col-md-4 mb-4";
                  productDiv.innerHTML = `
                                    <div class="card">
                                        <img src="${product.image_path}" class="card-img-top" alt="${product.product_name} width="50px" height="50px">
                                        <div class="card-body">
                                            <h5 class="card-title">${product.product_name}</h5>
                                            <p class="card-text">$${product.price}</p>
                                        </div>
                                    </div>
                                `;
                  resultsContainer.appendChild(productDiv);
                });
              })
              .catch(error => {
                console.error('Error fetching products:', error);
              });
            }else if(typeQuery){
              fetch(`/api/products/search/category/${encodeURIComponent(typeQuery)}`)
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .then(products => {
                console.log("Products:", products);
                const resultsContainer = document.getElementById('productsContainer');
                resultsContainer.innerHTML = ''; // Clear previous results
                
                products.forEach(product => {
                  const productDiv = document.createElement('div');
                  productDiv.className = "col-md-4 mb-4";
                  productDiv.innerHTML = `
                                    <div class="card">
                                        <img src="${product.image_path}" class="card-img-top" alt="${product.product_name}" width="50px" height="50px">
                                        <div class="card-body">
                                            <h5 class="card-title"><a href="/product/${product.product_id}">${product.product_name}</a></h5>
                                            <p class="card-text-id" hidden>${product.product_id}</p>
                                            <p class="card-text">$${product.price}</p>
                                            <button class="btn btn-primary addToCartBtn" data-product-id="${product.id}">Add to Cart</button>
                                        </div>
                                    </div>
                                `;
                                productsContainer.appendChild(cardDiv);
                            });
        
        
                  resultsContainer.appendChild(productDiv);
        
                  });
                  })
                        .catch(error => {
                            console.error('Error fetching products:', error);
                        });
             */
        });
    </script>
</body>
</html>
